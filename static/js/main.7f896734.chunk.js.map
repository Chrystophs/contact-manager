{"version":3,"sources":["context.js","component/contacts/Contact.js","component/contacts/Contacts.js","component/layout/TextInputGroup.js","component/contacts/AddContact.js","component/contacts/EditContact.js","component/layout/Header.js","component/pages/About.js","component/test/Test.js","component/pages/NotFound.js","App.js","serviceWorker.js","index.js"],"names":["Context","React","createContext","reducer","state","action","type","contacts","filter","contact","id","payload","map","Provider","dispatch","setState","axios","get","res","this","data","value","props","children","Component","Consumer","Contact","showContactInfo","onShowClick","onDeleteClick","a","delete","name","email","phone","className","onClick","style","cursor","float","color","bind","to","marginRight","Contacts","Fragment","key","TextInputGroup","label","placeholder","onChange","error","htmlFor","classnames","defaultProps","AddContact","errors","e","target","onSubmit","preventDefault","newContact","post","history","push","EditContact","updContact","match","params","put","Header","branding","href","About","Test","title","body","fetch","then","response","json","App","basename","process","exact","path","component","NotFound","isLocalhost","Boolean","window","location","hostname","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","catch","ReactDOM","render","document","getElementById","URL","origin","addEventListener","contentType","headers","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.7f896734.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\nimport axios from 'axios'\r\n\r\nconst Context = React.createContext();\r\n\r\nconst reducer = (state, action) => {\r\n    switch(action.type) {\r\n        case 'DELETE_CONTACT':\r\n            return {\r\n                ...state,\r\n                contacts: state.contacts.filter(contact => contact.id !== action.payload)\r\n            };\r\n        case 'ADD_CONTACT':\r\n            return {\r\n                ...state,\r\n                contacts: [action.payload, ...state.contacts]\r\n            };\r\n        case 'UPDATE_CONTACT':\r\n            return {\r\n                ...state,\r\n                contacts: state.contacts.map(contact => contact.id === action.payload.id ? (contact = action.payload) : contact)\r\n            };\r\n        default: \r\n            return state;\r\n        \r\n    }\r\n}\r\n\r\nexport class Provider extends Component {\r\n    state = {\r\n        contacts: [],\r\n        dispatch: action => this.setState(state => reducer(state, action))\r\n    }\r\n\r\n    async componentDidMount() {\r\n        const res = await axios.get('https://jsonplaceholder.typicode.com/users')\r\n\r\n        this.setState({contacts: res.data})\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <Context.Provider value={this.state}>\r\n                {this.props.children}\r\n            </Context.Provider>\r\n        );\r\n    }\r\n}\r\n\r\nexport const Consumer = Context.Consumer;","import React, { Component } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport PropTypes from 'prop-types'\r\nimport {Consumer} from '../../context'\r\nimport axios from 'axios'\r\n\r\n\r\nclass Contact extends Component {\r\n    state = {\r\n        showContactInfo: false\r\n    };\r\n\r\n    onShowClick= () => {\r\n        this.setState({showContactInfo: !this.state.showContactInfo});\r\n    }\r\n\r\n    onDeleteClick = async (id, dispatch) => {\r\n        await axios.delete(`https://jsonplaceholder.typicode.com/users/${id}`)\r\n\r\n        dispatch({type: 'DELETE_CONTACT', payload: id})\r\n    }\r\n\r\n    render() {        \r\n        const { id, name, email, phone } = this.props.contact;\r\n        const { showContactInfo } = this.state;\r\n\r\n        return (\r\n            <Consumer>\r\n                {value => {\r\n                    const { dispatch } = value;\r\n                    return(\r\n                        <div className=\"card card-body mb-3\">\r\n                            <h4>\r\n                                {name} \r\n                                <i onClick={() => this.setState({showContactInfo: !this.state.showContactInfo})} className=\"fas fa-sort-down\" style={{cursor: 'pointer'}}/>\r\n                                <i className=\"fas fa-times\" style={{cursor: 'pointer', float: 'right', color: 'red'}} onClick={this.onDeleteClick.bind(this, id, dispatch)} />\r\n                                <Link to={`contact/edit/${id}`}>\r\n                                    <i \r\n                                        className=\"fas fa-pencil-alt\" \r\n                                        style={{ \r\n                                            cursor: 'pointer',\r\n                                            float: 'right',\r\n                                            color: 'black',\r\n                                            marginRight: '1rem'\r\n                                            }}\r\n                                    ></i>    \r\n                                </Link>\r\n                            </h4>\r\n                            {showContactInfo ? (<ul className=\"list-group\">\r\n                                <li className=\"list-group-item\">Email: {email}</li>\r\n                                <li className=\"list-group-item\">Phont: {phone}</li>\r\n                            </ul>): null}\r\n                            \r\n                        </div>\r\n                    )\r\n                }}\r\n            </Consumer>\r\n        )\r\n    }\r\n}\r\n\r\nContact.propTypes = {\r\n    contact: PropTypes.object.isRequired\r\n}\r\n\r\nexport default Contact;","import React, { Component } from 'react'\r\nimport Contact from './Contact'\r\nimport { Consumer } from '../../context';\r\n\r\nclass Contacts extends Component {\r\n    render() {\r\n        return(\r\n            <Consumer>\r\n                {value => {\r\n                    const { contacts } = value;\r\n                    return(\r\n                        <React.Fragment>\r\n                            <h1 className=\"display-4 mb-2\">\r\n                                <span className=\"text-danger\">Contact</span> List\r\n                            </h1>\r\n                            {contacts.map(contact => (\r\n                                <Contact key={contact.id} contact={contact} />\r\n                            ))}\r\n                        </React.Fragment>\r\n                    )\r\n                }}\r\n            </Consumer>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Contacts;","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport classnames from 'classnames'\r\n\r\nconst TextInputGroup = ({\r\n    label,\r\n    name,\r\n    value,\r\n    placeholder,\r\n    type,\r\n    onChange,\r\n    error\r\n}) => {\r\n    return (\r\n        <div className=\"form-group\">\r\n            <label htmlFor={name}>{label}</label>\r\n            <input \r\n                type={type} \r\n                name={name} \r\n                className={classnames('form-control form-control-lrg', {\r\n                    'is-invalid': error\r\n                })} \r\n                placeholder={placeholder} \r\n                value={value} \r\n                onChange={onChange} />\r\n                {error && <div className=\"invalid-feedback\">{error}</div>}\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nTextInputGroup.propTypes = {\r\n    name: PropTypes.string.isRequired,\r\n    label: PropTypes.string.isRequired,\r\n    value: PropTypes.string.isRequired,\r\n    placeholder: PropTypes.string.isRequired,\r\n    type: PropTypes.string.isRequired,\r\n    onChange: PropTypes.func.isRequired,\r\n    error: PropTypes.string.isRequired\r\n}\r\n\r\nTextInputGroup.defaultProps = {\r\n    type: 'text'\r\n}\r\n\r\nexport default TextInputGroup;","import React, { Component } from 'react'\r\nimport {Consumer} from '../../context'\r\nimport TextInputGroup from '../layout/TextInputGroup'\r\nimport axios from 'axios'\r\n\r\nclass AddContact extends Component {\r\n    state = {\r\n        name: '',\r\n        email: '',\r\n        phone: '',\r\n        errors: {}\r\n    }\r\n\r\n    onChange = e => this.setState({ [e.target.name]: e.target.value });\r\n\r\n    onSubmit = async (dispatch, e) => {\r\n        e.preventDefault();\r\n        \r\n        const {name, email, phone} = this.state;\r\n\r\n        // Check for Errors\r\n        if(name === ''){\r\n            this.setState({\r\n                errors: {name: 'Name is required'}\r\n            })\r\n            return\r\n        }\r\n\r\n        if(email === ''){\r\n            this.setState({\r\n                errors: {email: 'Email is required'}\r\n            })\r\n            return\r\n        }\r\n\r\n        if(phone === ''){\r\n            this.setState({\r\n                errors: {phone: 'Phone is required'}\r\n            })\r\n            return\r\n        }\r\n\r\n        const newContact = {\r\n            name,\r\n            email,\r\n            phone\r\n        }\r\n\r\n        const res = await axios.post(`https://jsonplaceholder.typicode.com/users`, newContact)\r\n        \r\n        dispatch({type: 'ADD_CONTACT', payload: res.data})\r\n        \r\n        // Clear Form Fields\r\n        this.setState({\r\n            name: '',\r\n            email: '',\r\n            phone: '',\r\n            errors: {}\r\n        })\r\n\r\n        this.props.history.push('/');\r\n\r\n    }\r\n\r\n    render() {\r\n        const { name, email, phone, errors } = this.state;\r\n\r\n        return (\r\n            <Consumer>\r\n                {value => {\r\n                    const { dispatch } = value;\r\n                    return (\r\n                        <div className=\"card mb-3\">\r\n                            <div className=\"card-header\">Add Contact</div>\r\n                            <div className=\"card-body\">\r\n                                <form onSubmit={this.onSubmit.bind(this, dispatch)}>\r\n                                    <TextInputGroup \r\n                                        label=\"Name\" \r\n                                        name=\"name\" \r\n                                        placeholder=\"Enter Name...\" \r\n                                        value={name} \r\n                                        onChange={this.onChange} \r\n                                        error={errors.name} />\r\n                                    <TextInputGroup \r\n                                        label=\"Email\" \r\n                                        name=\"email\"\r\n                                        type=\"email\"\r\n                                        placeholder=\"Enter Email...\"\r\n                                        value={email}\r\n                                        onChange={this.onChange}\r\n                                        error={errors.email} />\r\n                                    <TextInputGroup \r\n                                        label=\"Phone\" \r\n                                        name=\"phone\"\r\n                                        type=\"phone\"\r\n                                        placeholder=\"Enter Phone...\"\r\n                                        value={phone}\r\n                                        onChange={this.onChange}\r\n                                        error={errors.phone} />\r\n                                    <input type=\"submit\" value=\"Add Contact\" className=\"btn btn-light btn-block\"  />\r\n                                </form>\r\n                            </div>\r\n                        </div>\r\n                    )\r\n                }}\r\n            </Consumer>\r\n        )\r\n    }\r\n}\r\n\r\nexport default AddContact;","import React, { Component } from 'react'\r\nimport {Consumer} from '../../context'\r\nimport TextInputGroup from '../layout/TextInputGroup'\r\nimport axios from 'axios'\r\n\r\nclass EditContact extends Component {\r\n    state = {\r\n        name: '',\r\n        email: '',\r\n        phone: '',\r\n        errors: {}\r\n    }\r\n\r\n    async componentDidMount() {\r\n        const { id } = this.props.match.params;\r\n        const res = await axios.get(`https://jsonplaceholder.typicode.com/users/${id}`)\r\n        const contact = res.data;\r\n        this.setState({\r\n            name: contact.name,\r\n            email: contact.email,\r\n            phone: contact.phone\r\n        })\r\n    }\r\n\r\n    onChange = e => this.setState({ [e.target.name]: e.target.value });\r\n\r\n    onSubmit = async (dispatch, e) => {\r\n        e.preventDefault();\r\n        \r\n        const {name, email, phone} = this.state;\r\n\r\n        // Check for Errors\r\n        if(name === ''){\r\n            this.setState({\r\n                errors: {name: 'Name is required'}\r\n            })\r\n            return\r\n        }\r\n\r\n        if(email === ''){\r\n            this.setState({\r\n                errors: {email: 'Email is required'}\r\n            })\r\n            return\r\n        }\r\n\r\n        if(phone === ''){\r\n            this.setState({\r\n                errors: {phone: 'Phone is required'}\r\n            })\r\n            return\r\n        }\r\n\r\n        const updContact = {\r\n            name,\r\n            email,\r\n            phone\r\n        }\r\n\r\n        const { id } = this.props.match.params;\r\n\r\n        const res = await axios.put(`https://jsonplaceholder.typicode.com/users/${id}`, updContact)\r\n\r\n        dispatch({type:\"UPDATE_CONTACT\", payload: res.data})\r\n\r\n        // Clear Form Fields\r\n        this.setState({\r\n            name: '',\r\n            email: '',\r\n            phone: '',\r\n            errors: {}\r\n        })\r\n\r\n        this.props.history.push('/');\r\n\r\n    }\r\n\r\n    render() {\r\n        const { name, email, phone, errors } = this.state;\r\n\r\n        return (\r\n            <Consumer>\r\n                {value => {\r\n                    const { dispatch } = value;\r\n                    return (\r\n                        <div className=\"card mb-3\">\r\n                            <div className=\"card-header\">Edit Contact</div>\r\n                            <div className=\"card-body\">\r\n                                <form onSubmit={this.onSubmit.bind(this, dispatch)}>\r\n                                    <TextInputGroup \r\n                                        label=\"Name\" \r\n                                        name=\"name\"\r\n                                        type=\"text\"\r\n                                        placeholder=\"Enter Name...\" \r\n                                        value={name} \r\n                                        onChange={this.onChange} \r\n                                        error={errors.name} />\r\n                                    <TextInputGroup \r\n                                        label=\"Email\" \r\n                                        name=\"email\"\r\n                                        type=\"email\"\r\n                                        placeholder=\"Enter Email...\"\r\n                                        value={email}\r\n                                        onChange={this.onChange}\r\n                                        error={errors.email} />\r\n                                    <TextInputGroup \r\n                                        label=\"Phone\" \r\n                                        name=\"phone\"\r\n                                        type=\"phone\"\r\n                                        placeholder=\"Enter Phone...\"\r\n                                        value={phone}\r\n                                        onChange={this.onChange}\r\n                                        error={errors.phone} />\r\n                                    <input type=\"submit\" value=\"Update Contact\" className=\"btn btn-light btn-block\"  />\r\n                                </form>\r\n                            </div>\r\n                        </div>\r\n                    )\r\n                }}\r\n            </Consumer>\r\n        )\r\n    }\r\n}\r\n\r\nexport default EditContact;","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst Header = (props) => {\r\n    const {branding} = props;\r\n    return (\r\n        <nav className=\"navbar navbar-expand-sm navbar-dark bg-danger mb-3 py-0\">\r\n            <div className=\"container\">\r\n                <a href=\"/\" className=\"navbar-brand\">{branding}</a>\r\n                <div>\r\n                    <ul className=\"navbar-nav mr-auto\">\r\n                        <li className=\"nav-item\">\r\n                            <Link to=\"/\" className=\"nav-link\">\r\n                                <i className=\"fas fa-home\"/> Home\r\n                            </Link>\r\n                        </li>\r\n                        <li className=\"nav-item\">\r\n                            <Link to=\"/contact/add\" className=\"nav-link\">\r\n                                <i className=\"fas fa-plus\"/> Add Contact\r\n                            </Link>\r\n                        </li>\r\n                        <li className=\"nav-item\">\r\n                            <Link to=\"/about\" className=\"nav-link\">\r\n                                <i className=\"fas fa-question\"/> About\r\n                            </Link>\r\n                        </li>\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n        </nav>\r\n    )\r\n}\r\n\r\nHeader.defaultProps = {\r\n    branding: \"My App\"\r\n};\r\n\r\nHeader.propTypes = {\r\n    branding: PropTypes.string.isRequired\r\n};\r\n\r\nexport default Header;","import React from 'react'\r\n\r\nconst About = () => {\r\n    return (\r\n        <div>\r\n            <h1 className=\"display-4\">About Contact Manager</h1>\r\n            <p className=\"lead\">Simple app to manage contacts</p>\r\n            <p className=\"text-seconday\">Version 1.0.0</p>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default About;","import React, { Component } from 'react'\r\n\r\nclass Test extends Component {\r\n    state= {\r\n        title: '',\r\n        body: ''\r\n    }\r\n    componentDidMount() {\r\n        \r\n        fetch('https://jsonplaceholder.typicode.com/posts/1').then(response => response.json()).then(data => this.setState({\r\n                title: data.title,\r\n                body: data.body\r\n            }));\r\n\r\n    }\r\n    render() {\r\n        const {title, body } = this.state;\r\n        return (\r\n            <div>\r\n                <h1>{title}</h1>\r\n                <p>{body}</p>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Test\r\n","import React from 'react'\r\n\r\nexport default () =>{\r\n    return (\r\n        <div>\r\n            <h1 className=\"display-4\"><span className=\"text-danger\">404</span> Page Not Found</h1>\r\n            <p className=\"lead\">Sorry, that page does not exist.</p>\r\n        </div>\r\n    )\r\n}\r\n","import React, {Component} from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport Contacts from './component/contacts/Contacts';\nimport AddContact from './component/contacts/AddContact';\nimport EditContact from './component/contacts/EditContact';\nimport Header from './component/layout/Header';\nimport About from './component/pages/About';\nimport Test from './component/test/Test';\nimport NotFound from './component/pages/NotFound';\n\nimport { Provider } from './context';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css';\n\nclass App extends Component {\n  render(){\n    return (\n      <Provider>\n        <Router basename={process.env.PUBLIC_URL}>\n          <div className=\"App\">\n            <Header branding=\"Contact Manager\" />\n            <div className=\"container\">\n              <Switch>\n                <Route exact path=\"/\" component={Contacts}/>\n                <Route exact path=\"/contact/add\" component={AddContact}/>\n                <Route exact path=\"/contact/edit/:id\" component={EditContact}/>\n                <Route exact path=\"/about\" component={About} />\n                <Route exact path=\"/test\" component={Test} />\n                <Route component={NotFound} />\n              </Switch>\n            </div>\n          </div>\n        </Router>\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\nserviceWorker.register();\n"],"sourceRoot":""}